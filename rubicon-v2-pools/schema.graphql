type Comptroller @entity {
    " ID is set to 1 "
    id: Bytes!
    " address of the price oracle being used "
    oracle: Bytes!
    " the factor used to determine the repayAmount for liquidating "
    closeFactor: BigInt!
    " the percent bonus liquidators receive on a liquidation "
    liquidationIncentive: BigInt!
}

type CToken @entity {
    " the cToken address "
    id: Bytes!
    " the underlying ERC20 address "
    underlyingAddress: Bytes!
    " the collateral factor of the cToken "
    collateralFactor: BigInt!
    " the reserve factor of the cToken "
    reserveFactor: BigInt!
    " the borrow rate of the cToken "
    borrowRate: BigDecimal!  " if we are using an archive node we will probably want to pull these as a function call rather than derive them from events "
    " the supply rate of the cToken "
    supplyRate: BigDecimal! " if we are using an archive node we will probably want to pull these as a function call rather than derive them from events "
    " the contract balance of the underlying ERC20 "
    cash: BigInt! " if we are using an archive node we can set this to a BigDecimal instead "
    " the total amount of the underlying that is currently borrowed "
    totalBorrows: BigInt! " if we are using an archive node we can set this to a BigDecimal instead "
    " the total amount of the reserves that have been accumulated "
    totalReserves: BigInt! " if we are using an archive node we can set this to a BigDecimal instead "
    " the total supply of the cToken itself "
    totalSupply: BigInt! " if we are using an archive node we can set this to a BigDecimal instead "
    " the current exchange rate from the underlying to the cToken "
    exchangeRate: BigDecimal! " note that this is a BigDecimal because it is a ratio of two Bigints and will need to be divided by the difference in decimals between the underlying and the cToken "
    " the address of the interest rate model "
    interestRateModelAddress: Bytes!
    " the number of the borrowers active in the market "
    numberOfBorrowers: Int!
    " the number of the suppliers active in the market "
    numberOfSuppliers: Int!
    " the block number that was last updated at "
    accrualBlockNumber: Int!
    " the timestamp that the market was last updated at "
    blockTimestamp: Int!
    " the most recent borrowIndex value for this market "
    borrowIndex: BigDecimal!
}

